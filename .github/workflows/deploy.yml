name: Terraform Deploy (Dev)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write   # for OIDC if you use it
  contents: read

jobs:
  terraform:
    name: Terraform Init → Plan → Apply
    runs-on: ubuntu-latest

    env:
      TF_IN_AUTOMATION: true
      TF_WORKING_DIR: infrastructure/environments/dev
      AWS_REGION: eu-central-1
      OIDC_ARN: arn:aws:iam::000338030864:role/test-roles #arn:aws:iam::000338030864:role/GitHubActions-IaC-DeployRole
      TF_STATE_BUCKET: terraform-state-storing-viego

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials (using OIDC or stored secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.OIDC_ARN }}
          role-session-name: GitHubActionsTerraform

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # Initialize Terraform (using S3 backend)
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" \
            -backend-config="key=dev/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="encrypt=true"

      # Terraform Plan
      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan
      
      # Upload Plan File (optional but useful for reviewing)
      - name: Upload Plan File
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan
          retention-days: 
          
      # Terraform Apply (auto-approve)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan
